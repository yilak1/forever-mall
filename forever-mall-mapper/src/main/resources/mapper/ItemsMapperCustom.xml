<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lym.mapper.ItemsMapperCustom" >

  <select id="queryItemComments" parameterType="Map" resultType="com.lym.pojo.vo.ItemCommentVO">
    SELECT
        ic.comment_level as commentLevel,
        ic.content as content,
        ic.sepc_name as specName,
        ic.created_time as createdTime,
        u.face as userFace,
        u.nickname as nickname
    FROM
        items_comments ic
    LEFT JOIN
        users u
    ON
        ic.user_id = u.id
    WHERE
        ic.item_id = #{paramsMap.itemId}
        <if test="paramsMap.level != null  and paramsMap.level != '' ">
            and ic.comment_level = #{paramsMap.level}
        </if>

  </select>

    <select id="searchItems"  parameterType="Map" resultType="com.lym.pojo.vo.SearchItemsVO">
        select
            i.id as id,
            i.item_name as itemName,
            i.sell_counts as sellCounts,
            ii.url as imgUrl,
            tempSpec.price_discount as price

        from items i
        left join items_img ii on ii.item_id = i.id
        left join (select item_id, MIN(price_discount) as price_discount from items_spec GROUP BY item_id) as tempSpec
        on tempSpec.item_id = i.id
        where
            ii.is_main = 1
            <if test="paramsMap.keywords != null and paramsMap.keywords != '' ">
              and i.item_name like '%${paramsMap.keywords}%'
            </if>
        ORDER BY
        <choose>
            <when test="paramsMap.sort == &quot;c&quot;">
                i.sell_counts desc
            </when>
            <when test="paramsMap.sort == &quot;p&quot;">
                tempSpec.price_discount asc
            </when>
            <otherwise>
                i.item_name asc
            </otherwise>
        </choose>
    </select>
    <!--c:根据销量进行排序-->
    <!--k:使用默认方法进行排序-->
    <!--p:根据价格进行排序-->

    <select id="searchItemsByThirdCat"  parameterType="Map" resultType="com.lym.pojo.vo.SearchItemsVO">
        select
            i.id as id,
            i.item_name as itemName,
            i.sell_counts as sellCounts,
            ii.url as imgUrl,
            tempSpec.price_discount as price

        from items i
        left join items_img ii on ii.item_id = i.id
        left join (select item_id, MIN(price_discount) as price_discount from items_spec GROUP BY item_id) as tempSpec
        on tempSpec.item_id = i.id
        where
        ii.is_main = 1
        and i.cat_id = #{paramsMap.catId}
        ORDER BY
        <choose>
            <when test="paramsMap.sort == &quot;c&quot;">
                i.sell_counts desc
            </when>
            <when test="paramsMap.sort == &quot;p&quot;">
                tempSpec.price_discount asc
            </when>
            <otherwise>
                i.item_name asc
            </otherwise>
        </choose>
    </select>

    <select id="queryItemsBySpecIds" parameterType="List" resultType="com.lym.pojo.vo.ShopcartVO">
        SELECT
            t_items.id as itemId,
            t_items.item_name as itemName,
            t_items_img.url as itemImgUrl,
            t_items_spec.id as specId,
            t_items_spec.`name` as specName,
            t_items_spec.price_discount as priceDiscount,
            t_items_spec.price_normal as priceNormal
        FROM
            items_spec t_items_spec
        LEFT JOIN
            items t_items
        ON
            t_items.id = t_items_spec.item_id
        LEFT JOIN
            items_img t_items_img
        on
            t_items_img.item_id = t_items.id
        WHERE
            t_items_img.is_main = 1
        AND
            t_items_spec.id in
            <foreach collection="paramsList" open="(" separator="," close=")" index="index" item="id">
                #{id}
            </foreach>
    </select>


</mapper>